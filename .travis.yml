group: deprecated-2017Q4

sudo: required

addons:
  chrome: stable

matrix:
  include:
  - os: linux
    language: python
    python: 2.7
    services:
    - rabbitmq
    - memcached
    - postgresql
  - os: osx
    language: generic
    osx_image: xcode8.3
  - os: osx
    language: generic
    osx_image: xcode7.3

# command to install dependencies
install:
  - if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then brew update; fi
  - if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then brew install rabbitmq; fi
  - if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then brew install memcached; fi
  - if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then rm -rf /usr/local/var/postgres; fi
  - if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then initdb /usr/local/var/postgres; fi
  - if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then pg_ctl -D /usr/local/var/postgres start; fi
  - if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then createuser -s postgres; fi
  - if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then brew services start rabbitmq; fi
  - if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then brew services start memcached; fi
  - sudo pip2 install -r requirements.txt
  - sudo pip2 install coveralls
  - sudo pip2 install codecov
  - if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then wget https://chromedriver.storage.googleapis.com/2.33/chromedriver_mac64.zip; fi
  - if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then unzip chromedriver_mac64.zip; fi
  - if [[ "$TRAVIS_OS_NAME" == "linux" ]]; then wget https://chromedriver.storage.googleapis.com/2.33/chromedriver_linux64.zip; fi
  - if [[ "$TRAVIS_OS_NAME" == "linux" ]]; then unzip chromedriver_linux64.zip; fi
  - export PATH=$PATH:$(pwd):/usr/local/sbin

before_script:
  - psql -c 'create database django;' -U postgres
  - psql -c 'create user django;' -U postgres
  - psql -c 'grant all on database django to django;' -U postgres
  - psql -c 'ALTER USER django CREATEDB;' -U postgres
  - mkdir -p ./media/blast/db/
  - sudo mkdir /var/log/django
  - sudo touch /var/log/django/django.log
  - sudo chmod 666 /var/log/django/django.log
  - sudo touch /var/log/django/i5k.log
  - sudo chmod 666 /var/log/django/i5k.log
  - sudo python2 manage.py migrate
  - sudo python2 setup.py
  - celery -A i5k worker --loglevel=info --concurrency=3 &
  - celery beat -A i5k --loglevel=info &
  - sudo python2 manage.py collectstatic --noinput

# command to run tests
script:
  - coverage run --source= ./manage.py test i5k --noinput
  - coverage run --source= ./manage.py test blast --noinput
  - coverage run --source= ./manage.py test hmmer --noinput
  - coverage run --source= ./manage.py test clustal --noinput

after_success:
  - coveralls
  - codecov
