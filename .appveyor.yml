image: Visual Studio 2015

environment:
  matrix:
    - PYTHON: C:\Python27-x64

# scripts that are called at very beginning, before repo cloning
init:
  - git config --global core.autocrlf input
  # Configure path for PostgreSQL
  - PATH=C:\Program Files\PostgreSQL\9.6\bin\;%PATH%
  - SET PGUSER=postgres
  - SET PGPASSWORD=Password12!
  - psql --version

# clone directory
clone_folder: c:\projects\genomics-workspace

platform: x64

configuration: Release

services:
  - postgresql96

install:
  # Configure Memcached
  - appveyor DownloadFile "http://s3.amazonaws.com/downloads.northscale.com/memcached-win64-1.4.4-14.zip" -FileName memcached.zip
  - 7z x memcached.zip -y
  - ps: $Memcached = Start-Process memcached\memcached.exe -PassThru
  # Configure RabbitMQ
  - ps: |
        Write-Host "Installing RabbitMQ..." -ForegroundColor Cyan

        Write-Host "Downloading..."
        $exePath = "$($env:USERPROFILE)\rabbitmq-server-3.6.3.exe"
        (New-Object Net.WebClient).DownloadFile('http://www.rabbitmq.com/releases/rabbitmq-server/v3.6.3/rabbitmq-server-3.6.3.exe', $exePath)

        Write-Host "Installing..."
        cmd /c start /wait $exePath /S

        $rabbitPath = 'C:\Program Files\RabbitMQ Server\rabbitmq_server-3.6.3'

        Write-Host "Installing service..."
        Start-Process -Wait "$rabbitPath\sbin\rabbitmq-service.bat" "install"

        Write-Host "Starting service..."
        Start-Process -Wait "$rabbitPath\sbin\rabbitmq-service.bat" "start"

        Get-Service "RabbitMQ"

        Write-Host "RabbitMQ installed and started" -ForegroundColor Green
  - SET PATH="C:\Users\appveyor\";"C:\Program Files\RabbitMQ Server\rabbitmq_server-3.6.3\sbin\";%PATH%
  # Configure chromedriver
  - appveyor DownloadFile https://chromedriver.storage.googleapis.com/2.32/chromedriver_win32.zip -FileName chromedriver_win32.zip
  - 7z x chromedriver_win32.zip -y
  - SET PATH=%cd%\chromedriver_win32\;%PATH%
  # Configure python
  - SET PATH=%PYTHON%;%PYTHON%\Scripts;%PATH%
  - echo Upgrading pip...
  - pip install -U pip
  - pip --version
  - cd c:\projects\genomics-workspace
  - pip install -r requirements.txt
  - mkdir media\blast\db\
  - mkdir C:\var\log\django\
  - ECHO >> C:\var\log\django\django.log
  - ECHO >> C:\var\log\django\i5k.log

build: off

before_test:
  - createdb django
  - psql -c "create user django with password 'django1234';" -U postgres
  - psql -c "grant all on database django to django;" -U postgres
  - psql -c "ALTER USER django CREATEDB;" -U postgres
  - python setup.py
  - ps: $celeryProcess = Start-Process "celery" "-A i5k worker --loglevel=info --concurrency=3" -PassThru
  - ps: $celeryBeatProcess = Start-Process "celery" "beat -A i5k --loglevel=info" -PassThru
  - python manage.py makemigrations
  - python manage.py migrate
  - python manage.py collectstatic --noinput
  - ps: $serverProcess = Start-Process "python" "manage.py runserver" -PassThru

test_script:
  - python manage.py test i5k.tests --noinput
  # TODO: blast tests finished but can't exit on AppVeyor
  # - python manage.py test blast.tests --noinput
  - ps: Write-Host "Test scripts are finished ..."

deploy: false
